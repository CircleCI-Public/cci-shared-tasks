parameters:
  #must provide
  task-name:
    type: string
    description: "The task folder under your `tasks` folder"

  # advanced, override
  org-name:
    type: string
    default: "${CIRCLE_PROJECT_USERNAME}"
    description: "(Advanced) Alternate github org name if not same as current project's"
  repo-name:
    type: string
    default: "cci-shared-tasks"
    description: "(Advanced) Repository containing tasks. Structure must match guideliens for this orb (see docs)"
  run-name:
    type: string
    default: "run.bash"
    description: "(Advanced) Override entrypoint script"
  run-params:
    type: string
    default: ""
    description: "Parameters passed to the script"    


steps:
  - add_ssh_keys
  - run:
      name: Keyscan Github (HACK)
      command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts

  - run: 
      name: Execute common task:<<parameters.task-name>> from <<parameters.repo-name>>
      command: |
        #!/bin/bash

        # replaces current repo name with task repo name
        TASK_REPO_URL=${CIRCLE_REPOSITORY_URL/$CIRCLE_PROJECT_REPONAME/<<parameters.repo-name>>}
        # replace orgname with parameter (most cases will be the same)
        TASK_REPO_URL=${TASK_REPO_URL/$CIRCLE_PROJECT_USERNAME/<<parameters.org-name>>}

        echo "Attempting to pull common task from: $TASK_REPO_URL"
        if [ -d "/tmp/<<parameters.repo-name>>" ];then
          echo "Task directory exists, skipping to pulling task"              
          cd /tmp/<<parameters.repo-name>>
        else
          mkdir -p /tmp/<<parameters.repo-name>>
          cd /tmp/<<parameters.repo-name>>
          git init -q > /dev/null
          git remote add origin ${TASK_REPO_URL} > /dev/null
          git fetch -q origin > /dev/null
        fi

        git checkout -q origin/master -- tasks/<<parameters.task-name>> > /dev/null
        cd - > /dev/null
        bash /tmp/<<parameters.repo-name>>/tasks/<<parameters.task-name>>/<<parameters.run-name>> <<parameters.run-params>>
